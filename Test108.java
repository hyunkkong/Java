/*=============================================
	■■■ 정렬(Sort) 알고리즘 ■■■
	-버블 정렬(Bubble Sort)
==============================================*/

/*
 ○	정렬
	: 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

 ○	정렬의 목적
	: 데이터 처리 과정의 편의성이나 가독성을 높이기 위함 
		→ 보기 좋게... 검색하기 위함

		정렬은 리소스 소모가 심한 작업, 즉, 시스템 부하가 심함

 ○ 정렬의 종류
	: 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬.......
*/

//버블 정렬(Bubble Sort)

// 실행 예))
// Source Data : 52 42 12 62 60
// Source Data : 12 42 52 60 62
// 계속하려면 아무 키나 누르세요...
public class Test108
{
	public static void main(String[] args)
	{
		int[] a = {52, 42, 12, 62, 60};
		int i,j;
		/*
		52, 42, 12, 62, 60							i=0 회전이 돌수록 횟수 감소
		==  --										j=1 a.length-1
		42, 52, 12, 62, 60
		    ==  --
		42, 12, 52, 62, 60
		        ==  --
		42, 12, 52, 62, 60
					==  --
		----------------------------------1회전
		42, 12, 52, 60, 62
		==  --
		12, 42, 52, 60, 62
		    ==  --
		12, 42, 52, 60, 62
				==  --
		----------------------------------2회전
		12, 42, 52, 60, 62
		==  --
		12, 42, 52, 60, 62
		    ==  --
		----------------------------------3회전
		12, 42, 52, 60, 62
		==  --
		----------------------------------4회전
		*/
		System.out.print("Source Data :");
		for (int n : a)
			System.out.print(n+ " ");
		System.out.println();


		//Bubble sort
		for (i=1; i<a.length ;i++ )			// i → 1		2		3		4 → 뒤에서 비교 대상을 하나씩 줄여주는 역할
		{									//		|		|		|		|
			for (j=0; j<a.length-i ;j++ )	// j → 0123	012		01		0 → 비교기준자리	
			{
				if (a[j] > a[j+1])		// 오름차순
				//if (a[j] < a[j+1])	// 내림차순
				{
					//자리 바꿈
					a[j]=a[j]^a[j+1];
					a[j+1]=a[j+1]^a[j];
					a[j]=a[j]^a[j+1];


				}
			}
		}


		
		
		System.out.print("Source Data :");
		for (int n : a)
			System.out.print(n+ " ");
		System.out.println();
	}
}